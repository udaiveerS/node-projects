#!/bin/sh

fileName="$1" 

#if 2 arguments provided then create .txt file with input 
if [ "$#" -eq 2 ]; then
    input=$2
    echo "creating ${fileName}.txt"
    echo $input > "${fileName}.txt"
fi

SP="../test_script/"
SP1="../test_script"

#echo "basename $SP"
fileTxt="${SP}${1}.txt"
fileJ="${SP}${1}.j"
logOut="${SP}${1}.out"
classFile="${SP}${1}.class"
jar1="${SP}TestScript.jar"
jar2="${SP}jasmin.jar"

#echo "fileTxt = ${fileTxt}"
#echo "fileJ = ${fileJ} "
#echo "logOut = ${logOut}"


echo "trying to compile..." > "${logOut}"
(java -jar ${jar1} "$fileTxt" >> "${logOut}") & pid=$!
( sleep 2 && kill -HUP $pid ) 2>/dev/null & watcher=$!
if wait $pid 2>/dev/null; then
    #echo "your_command finished"
    pkill -HUP -P $watcher
    wait $watcher

    if [ -f $logOut ]
    then
        echo "Test Script compiler successfully compiled txt" >> "${logOut}"
    else
        echo "compiler Error could not parse file" >> ${logOut}
    fi
else
    #echo "command interrupted"
    echo "Test Script compilation failed due to timeout" >> ${logOut}
fi

# compile the jasmine files 
echo "compiling jasmine file to .class file" >> ${logOut}
java -jar $jar2 $fileJ -d ${SP} 

# run the class files 
if [ -f "$classFile" ]
    then
        echo "running the class file on JVM" >> ${logOut}
        echo '----------- Code Execution -----------' >> ${logOut}
        echo java -cp ${SP} ${1} >> ${logOut}
        java -cp ${SP} ${1} >> ${logOut}
    else
        echo "jasmin code generation error: .class file could not be generated" >> ${logOut}
        echo "terminating compilation..." >> ${logOut}
fi

